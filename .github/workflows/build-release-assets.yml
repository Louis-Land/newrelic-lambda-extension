# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build Release Assets
on: 
  workflow_dispatch:
  release:
    types: [published]

env:
  TEST_RESULTS: /tmp/test-results

jobs:

  build-release-x86_64:
    runs-on: ubuntu-20.04
    container:
      image: golang:1.20
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3
      - name: Build and archive x86_64 distribution
        run: make zip-x86_64
      - name: Upload x86_64 binary as artifact
        uses: actions/upload-artifact@v3
        with:
          name: newrelic-lambda-extension-x86_64
          path: /tmp/newrelic-lambda-extension.x86_64.zip
      - name: Publish x86_64 release on GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: /tmp/newrelic-lambda-extension.x86_64.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref_name }}
          name: "Experimenatal Extension ${{ github.ref_name }}"
          draft: false
          prerelease: false

  build-release-arm:
    runs-on: ubuntu-20.04
    container:
      image: golang:1.20
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3
      - name: Build and archive arm distribution
        run: make zip-arm64
      - name: Upload arm binary as artifact
        uses: actions/upload-artifact@v3
        with:
          name: newrelic-lambda-extension-arm64
          path: /tmp/newrelic-lambda-extension.arm64.zip
      - name: Publish zip-arm64 release on GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: /tmp/newrelic-lambda-extension.arm64.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref_name }}
          name: "newrelic-lambda-extension ${{ github.ref_name }}"
          draft: false
          prerelease: false
